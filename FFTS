-- Whitelist System
local whitelist = {
    2825133720, -- Replace with allowed UserIds
    7734505704, -- Add more UserIds as needed
    4101398805, -- Add more UserIds as needed
    2207472332,
    5052681171,
    5185678536,
    6106235828,
    3864664807,
    411390,
    6061338738,
    3859749129,
    3318637780,
    7778751850,
    2660242220,
    7075916529,
    3876675193,
    7609196967,
    6134829432,
    4547524142,
    5462556528,
    3586275315,
    3728232468,
    2553068824,
    7478449348,
    597075613,
    2734938581,
    2440149395,

}

-- Function to check if a player is whitelisted
local function isWhitelisted(userId)
    for _, id in ipairs(whitelist) do
        if userId == id then
            return true
        end
    end
    return false
end

-- Get UserId and handle player kick
local Players = game:GetService("Players")
local player = Players.LocalPlayer

if player then
    -- Output your UserId to the console
    print("Your UserId: " .. player.UserId)

    -- Check whitelist and kick if not allowed
    if not isWhitelisted(player.UserId) then
        player:Kick("YOUR NOT WHITELIST DM STARFISHY FOR WHITELIST SYSTEM!")
        return -- Ensure the rest of the script doesn't run
    end
end

-- Load Orion Library and GUI
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/thanhdat4461/GUI-Library/main/Orion%20Library.lua'))()
local player = game.Players.LocalPlayer -- Define the player

local Window = OrionLib:MakeWindow({
    Name = "WhiterinFlashers",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "CatPieceHub",
    IntroEnabled = true,
    IntroText = "Cat Piece made by Whitering",
})

-- Credits Tab
local CreditsTab = Window:MakeTab({
    Name = "üìúCreditsüìú",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})
CreditsTab:AddSection({Name = "Credits & Information"})
CreditsTab:AddLabel("Creator: ‚öíÔ∏è Whitering")
CreditsTab:AddLabel("Dev: Starfishy üíª")

-- Player Hub Tab
local PlayerTab = Window:MakeTab({
    Name = "üßë‚ÄçüíªPlayer Hub üßë‚Äçüíª",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})
local SpeedSection = PlayerTab:AddSection({Name = "Speed/Jump Changer"})

-- Speed Slider
SpeedSection:AddSlider({
    Name = "WalkSpeed",
    Min = 16,
    Max = 500,
    Default = 16,
    Color = Color3.fromRGB(255, 125, 125),
    Increment = 1,
    ValueName = "Speed",
    Callback = function(value)
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = value
        end
    end
})

-- Jump Power Slider
SpeedSection:AddSlider({
    Name = "JumpPower",
    Min = 50,
    Max = 500,
    Default = 50,
    Color = Color3.fromRGB(125, 255, 125),
    Increment = 1,
    ValueName = "Power",
    Callback = function(value)
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.JumpPower = value
        end
    end
})

-- ESP Section
local ESPSection = PlayerTab:AddSection({Name = "ESP Controls"})

local function rainbowText(textLabel)
    local hue = 0
    while textLabel and textLabel.Parent do
        textLabel.TextColor3 = Color3.fromHSV(hue, 1, 1)
        hue = (hue + 0.01) % 1
        task.wait(0.05)
    end
end

local function fetchStats(targetPlayer)
    local statFolder = targetPlayer:FindFirstChild("Stat")
    local health = "N/A"
    local maxHealth = "N/A"
    
    if targetPlayer.Character then
        local humanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            health = math.floor(humanoid.Health)
            maxHealth = math.floor(humanoid.MaxHealth)
        end
    end

    return {
        durability = statFolder and statFolder:FindFirstChild("HealthP") and statFolder.HealthP.Value or "N/A",
        fruit = statFolder and statFolder:FindFirstChild("DevilFruitP") and statFolder.DevilFruitP.Value or "N/A",
        sword = statFolder and statFolder:FindFirstChild("SwordP") and statFolder.SwordP.Value or "N/A",
        combat = statFolder and statFolder:FindFirstChild("MeleeP") and statFolder.MeleeP.Value or "N/A",
        gold = statFolder and statFolder:FindFirstChild("Gold") and statFolder.Gold.Value or "N/A",
        levels = statFolder and statFolder:FindFirstChild("Levels") and statFolder.Levels.Value or "N/A",
        gem = statFolder and statFolder:FindFirstChild("Gem") and statFolder.Gem.Value or "N/A",
        health = health,
        maxHealth = maxHealth,
    }
end

local function createESP(targetPlayer)
    local character = targetPlayer.Character
    if not character then return end

    if character:FindFirstChild("ESP") then
        character.ESP:Destroy()
    end

    local esp = Instance.new("BillboardGui", character)
    esp.Name = "ESP"
    esp.Adornee = character:WaitForChild("HumanoidRootPart")
    esp.Size = UDim2.new(0, 200, 0, 150)
    esp.StudsOffset = Vector3.new(0, 3, 0)
    esp.AlwaysOnTop = true

    local label = Instance.new("TextLabel", esp)
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.RichText = true

    task.spawn(function()
        rainbowText(label)
    end)

    local function updateESP()
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        local humanoid = character:FindFirstChild("Humanoid")
        if not humanoidRootPart or not humanoid then return end

        local localPlayer = game.Players.LocalPlayer
        local distance = (humanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
        local stats = fetchStats(targetPlayer)

        label.Text = string.format(
            "<b>%s</b>\nHealth: %d/%d\nDistance: %d studs\n<font color='rgb(0,0,255)'>Gem: %s</font>\n<font color='rgb(255,255,0)'>Gold: %s</font>\n<font color='rgb(0,255,0)'>Levels: %s</font>\n<font color='rgb(255,165,0)'>Fruit: %s</font>\n<font color='rgb(255,165,0)'>Sword: %s</font>\n<font color='rgb(255,165,0)'>Combat: %s</font>\n<font color='rgb(255,165,0)'>Durability: %s</font>",
            targetPlayer.Name,
            stats.health,
            stats.maxHealth,
            math.floor(distance),
            stats.gem,
            stats.gold,
            stats.levels,
            stats.fruit,
            stats.sword,
            stats.combat,
            stats.durability
        )
    end

    game:GetService("RunService").RenderStepped:Connect(function()
        if character.Parent and character:FindFirstChild("Humanoid") and character:FindFirstChild("HumanoidRootPart") then
            updateESP()
        else
            esp:Destroy()
        end
    end)
end

local function enableESP()
    for _, targetPlayer in ipairs(game.Players:GetPlayers()) do
        if targetPlayer ~= player then
            targetPlayer.CharacterAdded:Connect(function()
                wait(1)
                createESP(targetPlayer)
            end)
            if targetPlayer.Character then
                createESP(targetPlayer)
            end
        end
    end

    game.Players.PlayerAdded:Connect(function(targetPlayer)
        targetPlayer.CharacterAdded:Connect(function()
            wait(1)
            createESP(targetPlayer)
        end)
    end)
end

local function stopESP()
    for _, targetPlayer in ipairs(game.Players:GetPlayers()) do
        if targetPlayer.Character and targetPlayer.Character:FindFirstChild("ESP") then
            targetPlayer.Character.ESP:Destroy()
        end
    end
    OrionLib:MakeNotification({
        Name = "ESP Disabled",
        Content = "All ESP has been removed.",
        Image = "rbxassetid://4483345998",
        Time = 5
    })
end

ESPSection:AddButton({
    Name = "üëÅÔ∏èESP üëÅÔ∏è",
    Callback = function()
        enableESP()
        OrionLib:MakeNotification({
            Name = "ESP Enabled",
            Content = "ESP is now active for all players.",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

ESPSection:AddButton({
    Name = "üëÅÔ∏èStop ESPüëÅÔ∏è",
    Callback = function()
        stopESP()
    end
})

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local backpack = player:FindFirstChild("Backpack")
local accessoryInventory = player:FindFirstChild("AccessoryInventoryList")
local swordInventory = player:FindFirstChild("InventoryList")
local LegendaryFruits = ReplicatedStorage:FindFirstChild("FRUITNOTIFSSPAWNS") and ReplicatedStorage.FRUITNOTIFSSPAWNS:FindFirstChild("Legendary")

local function addItemsToBackpack()
    if LegendaryFruits then
        for _, fruit in ipairs(LegendaryFruits:GetChildren()) do
            local fruitClone = fruit:Clone()
            fruitClone.Parent = backpack
        end
    end
end

local function addAllAccessories()
    if accessoryInventory then
        for _, item in ipairs(accessoryInventory:GetChildren()) do
            if item:IsA("BoolValue") then
                item.Value = true
            end
        end
    end
end

local function addAllSwords()
    if swordInventory then
        for _, item in ipairs(swordInventory:GetChildren()) do
            if item:IsA("BoolValue") then
                item.Value = true
            end
        end
    end
end

local InventoryTab = Window:MakeTab({
    Name = "‚öîÔ∏èSword Accessories ‚öîÔ∏è",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

InventoryTab:AddButton({
    Name = "Get All Swords",
    Callback = addAllSwords
})

InventoryTab:AddButton({
    Name = "Get All Accessories",
    Callback = addAllAccessories
})

-- Button to get all swords
InventoryTab:AddButton({Name = "Get All Swords (permanent)", Callback = function()
    local swords = {
        "ONEYEARSWORD", "Saber", "BlueScythe", "SaberV2", "MoltSword", "TripleYoru",
        "BattleAxe", "StrongSpear", "ColdSword", "EggSword", "BattleHammer",
        "RedScythe", "Katana", "DualKatana", "TripleKatana", "Kiribachi",
        "TimeSword", "FlameSword", "CatClaw", "Blaster777", "FrozenKatana",
        "RedKatana", "BlueKatana", "GreenKatana", "Bisento", "AceCutlass",
        "Hassaikai", "Napoleon", "Yoru", "YoruVersion2", "Guitar", "CrocoHook",
        "StickyStuff", "GravitySword", "CandyCane", "KamishDagger", "MoltenSword",
        "GojoSword", "Kikoku", "ChristmasKatana", "GreenKatana", "Pole", "StickyStaff", "ChristmasScythe", "BlueCandyCane", "TrueTripleKatana"
    }

    for _, sword in ipairs(swords) do
        local args = {
            [1] = "Buy",
            [2] = sword,
            [3] = 0
        }
        game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughASword"):FireServer(unpack(args))
    end
end})

-- Button to get all accessories
InventoryTab:AddButton({Name = "Get All Accessories (permanent)", Callback = function()
    local accessories = {
        "Cat", "StrawHat", "KiddCape", "LucyHelmet", "KizaruCape", "PirateKingCape",
        "KaidoCape", "BigMomHat", "MihawkHat", "PinkCatHat", "BlackCatHat",
        "BlueCatHat", "DaValkyrieHelm", "SerpentValk", "SantaHat", "BraveHat",
        "Top10Hat", "The2023Cape", "Eggwings", "Specialchristmashat", "Megachristmashat",
        "Snowmantophatred", "Snowmantophatgreen", "StrongShield", "WarpHat", "LawHat", "FirstToSeaTwoHat", "DoflamingoCape", "ShanksCape", "HistoricalCape", "CandyCaneHat", "ChristmasAntlers", "SnowmanTopHat", "SnowmanTopHatRed", "MegaChristmasHat", "SpecialChristmasHat", "THE2023Cape", "EggWings", "FirstToSeaThreeHat", "PinkCatCape", "BlueCatCape", "BlackCatCape", "None"
    }

    for _, accessory in ipairs(accessories) do
        local args = {
            [1] = "Buy",
            [2] = "Diamond",
            [3] = accessory,
            [4] = 0
        }
        game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughAAccessory"):FireServer(unpack(args))
    end
end})

-- Create new tab for Combat Styles
local CombatTab = Window:MakeTab({Name = "‚úäCombat‚úä", Icon = "rbxassetid://4483345998", PremiumOnly = false})
local CombatSection = CombatTab:AddSection({Name = "Buy Combat Styles"})

-- Button to buy Combat style
CombatTab:AddButton({Name = "Buy Combat Style", Callback = function()
    local args = {
        [1] = "Buy",
        [2] = "Combat",
        [3] = 1
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughAStyle"):FireServer(unpack(args))
end})

-- Button to buy Electric style
CombatTab:AddButton({Name = "Buy Electric Style", Callback = function()
    local args = {
        [1] = "Buy",
        [2] = "Electric",
        [3] = 17
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughAStyle"):FireServer(unpack(args))
end})

-- Button to buy DragonTalon style
CombatTab:AddButton({Name = "Buy DragonTalon Style", Callback = function()
    local args = {
        [1] = "Buy",
        [2] = "DragonTalon",
        [3] = 10
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughAStyle"):FireServer(unpack(args))
end})

-- Button to buy Cyborg style
CombatTab:AddButton({Name = "Buy Cyborg Style", Callback = function()
    local args = {
        [1] = "Buy",
        [2] = "Cyborg",
        [3] = 17
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughAStyle"):FireServer(unpack(args))
end})

-- Button to buy FishmanKarate style
CombatTab:AddButton({Name = "Buy FishmanKarate Style", Callback = function()
    local args = {
        [1] = "Buy",
        [2] = "FishmanKarate",
        [3] = 17
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughAStyle"):FireServer(unpack(args))
end})

-- Button to buy DarkLeg style
CombatTab:AddButton({Name = "Buy Sanguine Style", Callback = function()
    local args = {
        [1] = "Buy",
        [2] = "Sanguine",
        [3] = 7
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughAStyle"):FireServer(unpack(args))
end})

-- Button to buy DarkLeg style
CombatTab:AddButton({Name = "Buy DarkLeg Style", Callback = function()
    local args = {
        [1] = "Buy",
        [2] = "DarkLeg",
        [3] = 7
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughAStyle"):FireServer(unpack(args))
end})

-- Button to buy DarkLeg style
CombatTab:AddButton({Name = "Buy Okarun", Callback = function()
    local args = {
        [1] = "Buy",
        [2] = "Okarun",
        [3] = 7
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughAStyle"):FireServer(unpack(args))
end})

-- Button to buy SuperHuman style
CombatTab:AddButton({Name = "Buy SuperHuman Style", Callback = function()
    local args = {
        [1] = "Buy",
        [2] = "Superhuman",
        [3] = 1
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughAStyle"):FireServer(unpack(args))
end})

-- Button to buy Kj style
CombatTab:AddButton({Name = "Buy KJ (üõë not working)", Callback = function()
    local args = {
        [1] = "Buy",
        [2] = "KJStyle",
        [3] = 1
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughAStyle"):FireServer(unpack(args))
end})

-- Button to buy Garp Style
CombatTab:AddButton({Name = "Buy Garp(üõë not working)", Callback = function()
    local args = {
        [1] = "Buy",
        [2] = "GarpStyle",
        [3] = 1
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("BoughAStyle"):FireServer(unpack(args))
end})

-- Create a new tab for fruit rewards
local FruitTab = Window:MakeTab({Name = "üçêFruitüçê", Icon = "rbxassetid://4483345998", PremiumOnly = false})
local FruitSection = FruitTab:AddSection({Name = "Spin Rewards"})

-- Function to claim rewards multiple times
local function claimReward(fruitType, amount)
    for i = 1, amount do
        game:GetService("Players").LocalPlayer.PlayerGui.SpinUI.Chat.Yes.Spin.Reward:FireServer(fruitType)
        wait(0.1) -- Optional delay to prevent potential issues
    end
end

-- Input for Common fruit reward
FruitTab:AddTextbox({
    Name = "Common Fruit Amount",
    Default = "1",
    TextDisappear = true,
    Callback = function(value)
        local amount = tonumber(value)
        if amount then
            claimReward("Common", amount)
        else
            warn("Invalid amount entered for Common Fruit.")
        end
    end
})

-- Input for Uncommon fruit reward
FruitTab:AddTextbox({
    Name = "Uncommon Fruit Amount",
    Default = "1",
    TextDisappear = true,
    Callback = function(value)
        local amount = tonumber(value)
        if amount then
            claimReward("Uncommon", amount)
        else
            warn("Invalid amount entered for Uncommon Fruit.")
        end
    end
})

-- Input for Rare fruit reward
FruitTab:AddTextbox({
    Name = "Rare Fruit Amount",
    Default = "1",
    TextDisappear = true,
    Callback = function(value)
        local amount = tonumber(value)
        if amount then
            claimReward("Rare", amount)
        else
            warn("Invalid amount entered for Rare Fruit.")
        end
    end
})

-- Input for Legendary fruit reward
FruitTab:AddTextbox({
    Name = "Legendary Fruit Amount",
    Default = "1",
    TextDisappear = true,
    Callback = function(value)
        local amount = tonumber(value)
        if amount then
            claimReward("Legendary", amount)
        else
            warn("Invalid amount entered for Legendary Fruit.")
        end
    end
})

-- Button to eat a fruit
FruitTab:AddButton({Name = "Control fruit (admin only have)", Callback = function()
    local args = {
        [1] = "Eat",
        [2] = "OpeFruit",
        [3] = "Ope"
    }
    game:GetService("ReplicatedStorage"):WaitForChild("SystemFruitEatV1"):WaitForChild("SecureEated"):FireServer(unpack(args))
end})

-- Create new tab to remove negative points
local RemoveNegativePointsTab = Window:MakeTab({Name = "üìäStats optionüìä", Icon = "rbxassetid://4483345998", PremiumOnly = false})
local RemoveNegativePointsSection = RemoveNegativePointsTab:AddSection({Name = "Remove Negative Points"})

-- Button to reveal secret
RemoveNegativePointsTab:AddButton({Name = "reset stats", Callback = function()
    local args = {
        [1] = game:GetService("Players").LocalPlayer
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("SHANKSSECRETREVEALEDGG"):FireServer(unpack(args))
end})

-- Button to remove negative points
RemoveNegativePointsTab:AddButton({Name = "Remove Negative Points", Callback = function()
    local args = {[1] = -10000000000000000000}
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("testingstats"):FireServer(unpack(args))
end})

-- Button to achieve max stats V2
RemoveNegativePointsTab:AddButton({ Name = "Stats -9qn", Callback = function()
    local args = {
        [1] = -9000000000000000000
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("testingstats"):FireServer(unpack(args))
end })

-- Button to achieve max stats V2
RemoveNegativePointsTab:AddButton({ Name = "Stats +900qd", Callback = function()
    local args = {
        [1] = 900000000000000000
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("testingstats"):FireServer(unpack(args))
end })

-- Button to set max stats
RemoveNegativePointsTab:AddButton({ Name = "Stats +90qd", Callback = function()
    local args = {
        [1] = 90000000000000000
    }
    game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("testingstats"):FireServer(unpack(args))
end })

local points = 0

RemoveNegativePointsTab:AddTextbox({
    Name = "Enter Points",
    Default = "",
    TextDisappear = true,
    Callback = function(value)
        points = tonumber(value)
        print("Points entered:", points)
    end
})

RemoveNegativePointsTab:AddButton({ Name = "Set Points", Callback = function()
    if points and points > 0 then
        local args = {
            [1] = points
        }
        game:GetService("ReplicatedStorage"):WaitForChild("BonusFolderFX"):WaitForChild("testingstats"):FireServer(unpack(args))
        print("Points set to:", points)
    else
        warn("Invalid points value")
    end
end })

local ScriptsTab = Window:MakeTab({
    Name = "üëºGod modeüëº",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local loopsRunning = false

-- Function to start all loops
local function startAllLoops()
    if loopsRunning then
        return -- Exit if loops are already running
    end

    loopsRunning = true

    -- Infinite Health Loop
    spawn(function()
        while loopsRunning do
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildOfClass("Humanoid")

            if humanoid then
                humanoid.MaxHealth = math.huge -- Set maximum health to infinite
                humanoid.Health = humanoid.MaxHealth -- Set current health to maximum health
            end

            wait(0.1) -- Slight delay to prevent performance issues
        end
    end)

    -- Fruit Eating Loop
    spawn(function()
        while loopsRunning do
            local args = {
                [1] = "Eat",
                [2] = "ReviveFruit",
                [3] = "Revive"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("SystemFruitEatV1"):WaitForChild("SecureEated"):FireServer(unpack(args))
            wait(2) -- Wait for 2 seconds before eating again
        end
    end)
end

-- Function to stop all loops
local function stopAllLoops()
    loopsRunning = false
end

-- Add "God Mode" button
ScriptsTab:AddButton({
    Name = "Activate God Mode (üü° sometimes got issues)",
    Callback = function()
        startAllLoops() -- Start all loops when the button is clicked
    end
})

-- Add "Deactivate God Mode" button
ScriptsTab:AddButton({
    Name = "Deactivate God Mode (üü° sometimes got issues)",
    Callback = function()
        stopAllLoops() -- Stop all loops when the button is clicked
    end
})

local RewardTab = Window:MakeTab({
    Name = "üí∞Geli and diamond üí∞",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

RewardTab:AddTextbox({
    Name = "üíéSet diamondüíé",
    Default = "1",
    TextDisappear = true,
    Callback = function(value)
        local amount = tonumber(value)
        if amount then
            local args = {
                [1] = amount
            }
            game:GetService("ReplicatedStorage").BonusFolderFX.DiamondCodes:FireServer(unpack(args))
        else
            warn("Invalid amount entered for Diamond Amount.")
        end
    end
})

RewardTab:AddTextbox({
    Name = "üíµSet geliüíµ",
    Default = "1",
    TextDisappear = true,
    Callback = function(value)
        local amount = tonumber(value)
        if amount then
            local args = {
                [1] = amount,
                [2] = "Code2"
            }
            game:GetService("ReplicatedStorage").EnterCode:FireServer(unpack(args))
        else
            warn("Invalid amount entered for Code Amount.")
        end
    end
})

-- Auto Farm Feature
local attackedNPCs = {}
local autoAttackEnabled = false

local function findAllNPCs()
    local npcs = {}
    for _, npc in pairs(workspace:GetDescendants()) do
        if npc:FindFirstChild("Humanoid") and npc:FindFirstChild("HumanoidRootPart") and npc:IsA("Model") then
            if npc.Humanoid.Health > 0 then
                table.insert(npcs, npc)
            end
        end
    end
    return npcs
end

local function attackNPC(npc)
    if not attackedNPCs[npc] then
        attackedNPCs[npc] = true
        local targetPosition = npc.HumanoidRootPart.Position
        local args = {
            [1] = CFrame.new(targetPosition),
            [2] = 700
        }
        game:GetService("Players").LocalPlayer.Character.Warp.m1.Fire:FireServer(unpack(args))
        print("Attacked NPC:", npc.Name)
    end
end

local function attackAllNPCsOnce()
    local npcs = findAllNPCs()
    for _, npc in pairs(npcs) do
        if npc:FindFirstChild("HumanoidRootPart") and npc.Humanoid.Health > 0 then
            attackNPC(npc)
        end
    end
end

local function resetAttackedNPCs()
    for npc, _ in pairs(attackedNPCs) do
        if npc.Humanoid.Health <= 0 then
            attackedNPCs[npc] = nil
        end
    end
end

game:GetService("RunService").Heartbeat:Connect(resetAttackedNPCs)

local function toggleAutoAttack()
    if autoAttackEnabled then
        while autoAttackEnabled do
            attackAllNPCsOnce()
            wait(3)
        end
    end
end

local AutoAttackTab = Window:MakeTab({
    Name = "auto farm ",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
}) 

AutoAttackTab:AddToggle({
    Name = "Enable Auto farm WARP FRUIT (Every 3s)",
    Default = false,
    Callback = function(value)
        autoAttackEnabled = value
        if value then
            toggleAutoAttack()
        end
    end
})

OrionLib:Init()
